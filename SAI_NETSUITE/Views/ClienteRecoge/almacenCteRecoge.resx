<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAVdEVYdFRpdGxlAE1vdmVQaXZvdFRhYmxlO2DvCLkAAAOgSURBVFhHxZZZSFRRHMatzEwqWmg3
        elBoGkenhbCI7E17Cior2gzT1FInNbXN1NFRc6lxwaJFaMc0yzLLNisM26EQIvChsMKUdnMke/h3/qdz
        z8w93TvTNakPfn9mzp37fd+5cy9cNwD4r9BhKb22mtBEgH4CvVa7OUgMlqAjq7jh7jdbL3T3/IBvtr/j
        l0cvoCfLphKDJegwWxvoiZ0fe6DjL0EP9EJPlk0lBkvQkbH3Cm2PBvEHH/2G2roS+Fv0Qk+WTSUGS9CR
        VlgvK1By5w1HMhXXlXAsgJ4sm0oMlqBjZ35dvxdAT5ZNJQZL0LEt92K/F0BPlk0lBkvQkZpTKysgorau
        hFQAPVk2lRgsQUeKxV6gP0Av9GTZVGKwBB1bs8+7vAJaQC/0ZNlUYrAEHUlZ52QFim+1cfpaAD1ZNpUY
        LEFHorlGVmDfzZecvhZAT5atKl4gIVNeoOhaK6evBdCT5aiKF9iScVZWIP/yC46WAu8+2OBcUwl86bIB
        erIcVfECpvRqWYHcuhaOlgJvOr5CQvlMyDu1HEzmsj8vEL9bXsBS+5SjpUBb+ycwlc2AquaNYCqdDbHF
        xt1LTb7uLO838QJxaVWyAlk1jzlaCrx6+wHiSozQ0BoJt1uTYH/9Uoi1BjyMzDPoWaZM9gK75AVEcL39
        fTdstga4JKc6CM62rICalpVwozUajjauwHVbdKH/1jmLxg9k2VS8QOyuMy7fB163f4aYIn9ofhnrlJNP
        FsuofhYKl56FgfV8CEQXGO5ssOh9WL69QMz20/e6ur87fSPqfP8FogoMcOR+sGYqHoTAhZblcODyIojK
        N3RF5PrFkPwBvED4lkMbNiYfe7x5RyWoEZV8DCL3+EF5U1CfsVTPhcg8v6516bp4UmAQL0CEd+owwmjC
        GBW8I3L1YG0M1Mye+jmQUmGE9Zm6+/MWTwgkXsMJ9gKbdlQ6hckr3KIHVyQd9oeC67M4208YITxb37Ms
        0dfs7jFwAvHB8MEE+1+gFOoI0xDCWIK3E6auz54OeVeNkF0XAAmHDLAmfdrT+UsmLiTH8Op6EviTwAu4
        gglPxBJeThgVZtZB6nEDhGXqepcl+hR6jXCfTNb5rglc1FsMU0KDvNZm6mBV2rTnC0InBZPveO8MJQzC
        g6KotximhAZ5hib7WkeOGzKFfB5B8CDIdu0o6i2GKaFBeJnxaVLdtaOotximhAbhbjFYddeOot5i2L9G
        cfHfAW4/AfVml2a1hu/4AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="alertControl1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>