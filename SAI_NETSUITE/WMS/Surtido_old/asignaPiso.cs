using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace SAI.Almacen.WMS.Surtido
{
    public partial class asignaPiso : UserControl
    {
        string sqlString;
        public asignaPiso(string sql)
        {
            sqlString = sql;
            InitializeComponent();
 
        }

        public void CargaUsuarios()
        {
            SqlConnection myConnection = new SqlConnection(sqlString);
            string query = " select idusuario,nombre,Usuario from INDGDLSQL01.INDAR_INACTIONWMS.dbo.usuario";
            SqlDataAdapter da = new SqlDataAdapter(query, myConnection);
            DataSet ds = new DataSet();
            da.Fill(ds);
            searchLookUpEdit1.Properties.DataSource = ds.Tables[0];
            searchLookUpEdit1.Properties.DisplayMember = "nombre";
            searchLookUpEdit1.Properties.ValueMember = "idusuario";
            searchLookUpEdit2.Properties.DataSource = ds.Tables[0];
            searchLookUpEdit2.Properties.DisplayMember = "nombre";
            searchLookUpEdit2.Properties.ValueMember = "idusuario";
        
          
        }

        public void cargaAreas()
        {
            SqlConnection myConnection = new SqlConnection(sqlString);
            string query = "  select distinct idarea,nombre from INDGDLSQL01.INDAR_INACTIONWMS.dbo.Area where IdAlmacen=2 and IdArea>=32";
            SqlDataAdapter da = new SqlDataAdapter(query, myConnection);
            DataSet ds = new DataSet();
            da.Fill(ds);
           comboArea.Properties.DataSource = ds.Tables[0];
           comboArea.Properties.DisplayMember = "nombre";
           comboArea.Properties.ValueMember = "idarea";
        }

        private void asignaPiso_Load(object sender, EventArgs e)
        {
            CargaUsuarios();
            cargaAreas();
        }

        public void cargaUbicaciones(string idUsuario)
        {
            SqlConnection myConnection = new SqlConnection(sqlString);
            string query = @" select l.Codigo,A.Nombre from INDGDLSQL01.INDAR_INACTIONWMS.dbo.UsuarioLocalidad UL
                             left join INDGDLSQL01.INDAR_INACTIONWMS.dbo.Localidad L  ON UL.IdLocalidad=l.IdLocalidad
                             left join INDGDLSQL01.INDAR_INACTIONWMS.dbo.Area A on l.IdArea=a.IdArea
                             where ul.IdUsuario=" + idUsuario;
            SqlDataAdapter da = new SqlDataAdapter(query, myConnection);
            DataSet ds = new DataSet();
            da.Fill(ds);
            gridUbicaciones.DataSource = ds.Tables[0];
            
        }

        private void searchLookUpEdit1_EditValueChanged(object sender, EventArgs e)
        {
            cargaUbicaciones(searchLookUpEdit1.EditValue.ToString());
        }

        // This event is generated by Data Source Configuration Wizard
        void unboundSource1_ValueNeeded(object sender, DevExpress.Data.UnboundSourceValueNeededEventArgs e)
        {

            // Handle this event to obtain data from your data source
            // e.Value = something /* TODO: Assign the real data here.*/
        }

        // This event is generated by Data Source Configuration Wizard
        void unboundSource1_ValuePushed(object sender, DevExpress.Data.UnboundSourceValuePushedEventArgs e)
        {

            // Handle this event to save modified data back to your data source
            // something = e.Value; /* TODO: Propagate the value into the storage.*/
        }


        public void configurarChart()
        { 
        
         
        }

        private void btnDesAsigna_Click(object sender, EventArgs e)
        {
            if(dxValidationProvider1.Validate())
                            DesAsigna(searchLookUpEdit1.EditValue.ToString(),0);

        }

        public void DesAsigna(string IdUsuario,int completo)
        {
            try
            {
                SqlConnection myConnection = new SqlConnection(sqlString);
                myConnection.Open();
                SqlCommand cmd = new SqlCommand("", myConnection);
                //cmd.CommandType = CommandType.StoredProcedure;
                cmd.CommandText = "exec INDGDLSQL01.INDARWMS.DBO.spDesAsingaUsuarioLocalidad " + IdUsuario;
                //cmd.Parameters.AddWithValue("@idUsuario", IdUsuario);
             int rows=   cmd.ExecuteNonQuery();
                myConnection.Close();
                myConnection.Dispose();
                cmd.Dispose();
                if (rows >= 1 && completo==0)
                    MessageBox.Show("USUARIO DES-ASIGNADO");
                else
                    MessageBox.Show("No hubo cambios");

            }
            catch (SqlException EX)
            {
                MessageBox.Show(EX.ToString());
            }
        
        }


        public void Asigna(string idUsuario,string area)
        {
            try
            {
                SqlConnection myConnection = new SqlConnection(sqlString);
                myConnection.Open();
                SqlCommand cmd = new SqlCommand("", myConnection);

                cmd.CommandText = @" INSERT INTO INDGDLSQL01.INDAR_INACTIONWMS.dbo.UsuarioLocalidad (IdUsuario,IdLocalidad,IdUsuarioActualiza,FechaActualizado)
                              select " + idUsuario + ",idlocalidad,1,GETDATE() from INDGDLSQL01.INDAR_INACTIONWMS.dbo.Localidad 		where IdArea=" + area;
                Console.WriteLine(cmd.CommandText);
                int rows = cmd.ExecuteNonQuery();
                myConnection.Close();
                myConnection.Dispose();
                cmd.Dispose();
                if (rows >= 1)
                    MessageBox.Show("USUARIO ASIGNADO");
                else
                    MessageBox.Show("No hubo cambios");

            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.ToString());
            }
        
        
        }

        private void btnAsignar_Click(object sender, EventArgs e)
        {
            DesAsigna(searchLookUpEdit1.EditValue.ToString(),1);
            Asigna(searchLookUpEdit1.EditValue.ToString(), comboArea.EditValue.ToString());
        }

        private void P2510_Click(object sender, EventArgs e)
        {
          //  P1_25.Appearance.BackColor = Color.Green;
            if(  ((DevExpress.XtraEditors.SimpleButton)sender).Appearance.BackColor != Color.Green)
            ((DevExpress.XtraEditors.SimpleButton)sender).Appearance.BackColor = Color.DarkOrange;
           
        }

        private void P2510_DoubleClick(object sender, EventArgs e)
        {
          ((DevExpress.XtraEditors.SimpleButton)sender).Appearance.BackColor  = Color.White;
           
        }

        private void btnBuscarMapa_Click(object sender, EventArgs e)
        {
            reseteaBotones();
            ColoreaUbicaciones();
        }

        public void reseteaBotones()
        {
            foreach (Control c in groupControl2.Controls) //here is the minor change
            {

                if (c is DevExpress.XtraEditors.SimpleButton)
                {


                    ((DevExpress.XtraEditors.SimpleButton)c).Appearance.BackColor = default(Color);
                    
                }
             
            }
        
        }

        public void ColoreaUbicaciones()
        {
            SqlConnection myConnection = new SqlConnection(sqlString);
            string query = @"SELECT  isnull(sum(P1_25),0) AS P1_25,isnull(sum(P2_25),0) AS P2_25,isnull(sum(P1_26),0) AS P1_26,isnull(SUM(P2_26),0) AS P2_26,
		                    isnull(SUM(P1_27),0) AS P1_27,isnull(SUM(P2_27),0) AS P2_27,isnull(sum(P1_28),0) AS P1_28,isnull(SUM(P2_28),0) AS P2_28,
		                    isnull(SUM(P1_29),0) AS P1_29,isnull(SUM(P2_29),0) AS P2_29,isnull(SUM(P1_30),0) AS P1_30,isnull(SUM(P2_30),0) AS P2_30,
		                    isnull(SUM(P1_31),0) AS P1_31,isnull(SUM(P2_31),0) AS P2_31,isnull(SUM(P1_32),0) AS P1_32,isnull(SUM(P2_32),0) AS P2_32,
		                    isnull(SUM(P1_33),0) AS P1_33,isnull(SUM(P2_33),0) AS P2_33,isnull(SUM(P1_34),0) AS P1_34,isnull(SUM(P2_34),0) AS P2_34,
		                    isnull(SUM(P1_35),0) AS P1_35,isnull(SUM(P2_35),0) AS P2_35,isnull(SUM(P1_36),0) AS P1_36,isnull(SUM(P2_36),0) AS P2_36,
		                    isnull(SUM(P1_37),0) AS P1_37,isnull(SUM(P2_37),0) AS P2_37,isnull(SUM(P1_38),0) AS P1_38,isnull(SUM(P2_38),0) AS P2_38
		                    from (
                    select 
                    l.Codigo,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2510' and '2514'  THEN 1 ELSE 0 END as P1_25,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2515' and '2519'  THEN 1 ELSE 0 END as P2_25,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2610' and '2614'  THEN 1 ELSE 0 END as P1_26,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2615' and '2619'  THEN 1 ELSE 0 END as P2_26,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2710' and '2714'  THEN 1 ELSE 0 END as P1_27,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2715' and '2719'  THEN 1 ELSE 0 END as P2_27,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2810' and '2814'  THEN 1 ELSE 0 END as P1_28,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2815' and '2819'  THEN 1 ELSE 0 END as P2_28,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2910' and '2914'  THEN 1 ELSE 0 END as P1_29,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '2915' and '2919'  THEN 1 ELSE 0 END as P2_29,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3010' and '3014'  THEN 1 ELSE 0 END as P1_30,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3015' and '3019'  THEN 1 ELSE 0 END as P2_30,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3110' and '3114'  THEN 1 ELSE 0 END as P1_31,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3115' and '3119'  THEN 1 ELSE 0 END as P2_31,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3210' and '3214'  THEN 1 ELSE 0 END as P1_32,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3215' and '3219'  THEN 1 ELSE 0 END as P2_32,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3310' and '3314'  THEN 1 ELSE 0 END as P1_33,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3315' and '3319'  THEN 1 ELSE 0 END as P2_33,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3410' and '3414'  THEN 1 ELSE 0 END as P1_34,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3415' and '3419'  THEN 1 ELSE 0 END as P2_34,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3510' and '3514'  THEN 1 ELSE 0 END as P1_35,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3515' and '3519'  THEN 1 ELSE 0 END as P2_35,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3610' and '3614'  THEN 1 ELSE 0 END as P1_36,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3615' and '3619'  THEN 1 ELSE 0 END as P2_36,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3710' and '3714'  THEN 1 ELSE 0 END as P1_37,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3715' and '3719'  THEN 1 ELSE 0 END as P2_37,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3810' and '3814'  THEN 1 ELSE 0 END as P1_38,
                    CASE WHEN SUBSTRing (l.Codigo, 3,4)  between '3815' and '3819'  THEN 1 ELSE 0 END as P2_38



                      from  INDGDLSQL01.INDAR_INACTIONWMS.dbo.Localidad L  
		                    LEFT JOIN INDGDLSQL01.INDAR_INACTIONWMS.dbo.UsuarioLocalidad UL on l.IdLocalidad=ul.IdLocalidad
                    where L.Codigo LIKE '" + comboMapaPiso.Text + "%'   and ul.IdUsuario=" + searchLookUpEdit2.EditValue.ToString() + "  ) as q";
            Console.WriteLine(query);
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter(query, myConnection);
            da.Fill(ds);
            for (int i = 0; i < ds.Tables[0].Columns.Count; i++)
            {
                if (!ds.Tables[0].Rows[0][i].ToString().Equals("0"))
                {
                  //  Console.WriteLine("ES DIFERENTE DE CERO?" + ds.Tables[0].Rows[0][i].ToString());
                    foreach (Control c in groupControl2.Controls) //here is the minor change
                    {

                        if (c is DevExpress.XtraEditors.SimpleButton)
                        {
                       //     Console.WriteLine("Si es boton");
                          if(c.Name.ToString().Equals(ds.Tables[0].Columns[i].ColumnName.ToString()))
                          {
                          //    Console.WriteLine(ds.Tables[0].Columns[i].ColumnName.ToString() + "==" + c.Name.ToString());
                              ((DevExpress.XtraEditors.SimpleButton)c).Appearance.BackColor = Color.Green;
                          }
                        }
                       
                    }
                }
            
            }


        }

        private void simpleButton3_Click(object sender, EventArgs e)
        {
            foreach (Control c in groupControl2.Controls)
            {

                if (c is DevExpress.XtraEditors.SimpleButton)
                {
                    if (((DevExpress.XtraEditors.SimpleButton)c).Appearance.BackColor == Color.DarkOrange)
                    {
                        //Asigna
                        if (c.Name.ToString().StartsWith("P1"))
                            asignaMapaUbicaciones(comboMapaPiso.Text+c.Name.ToString().Split('_').Skip(1).First(),true);
                        //    asignaMapaUbicaciones(c.Name.ToString().Replace("_", string.Empty), true);
                        else
                           // asignaMapaUbicaciones(c.Name.ToString().Replace("_", string.Empty), false);
                            asignaMapaUbicaciones(comboMapaPiso.Text + c.Name.ToString().Split('_').Skip(1).First(), false);
                    }
                    if (((DevExpress.XtraEditors.SimpleButton)c).Appearance.BackColor == Color.White)
                    {
                        //desasigna
                        if (c.Name.ToString().StartsWith("P1"))
                            DesAsignaMapaUbicaciones(comboMapaPiso.Text + c.Name.ToString().Split('_').Skip(1).First(), true);
                        else
                            DesAsignaMapaUbicaciones(comboMapaPiso.Text + c.Name.ToString().Split('_').Skip(1).First(), false);
                    }
                }

            }
            MessageBox.Show("TERMINADO");
        }
        public void DesAsignaMapaUbicaciones(string ubicacion,bool adelante)
        {
            try
            {
                SqlConnection myConnection = new SqlConnection(sqlString);
                myConnection.Open();
                SqlCommand cmd = new SqlCommand("", myConnection);

                if (adelante)
                {
                    cmd.CommandText = @" DELETE FROM  INDGDLSQL01.INDAR_INACTIONWMS.dbo.UsuarioLocalidad   WHERE IdUsuario=" + searchLookUpEdit2.EditValue.ToString() + " AND IdLocalidad IN (SELECT IdLocalidad FROM INDGDLSQL01.INDAR_INACTIONWMS.dbo.Localidad  where codigo  BETWEEN '" + ubicacion + "10' AND '" + ubicacion + "14' )";
                }
                else
                {
                    cmd.CommandText = @" DELETE FROM  INDGDLSQL01.INDAR_INACTIONWMS.dbo.UsuarioLocalidad   WHERE IdUsuario=" + searchLookUpEdit2.EditValue.ToString() + " AND IdLocalidad IN (SELECT IdLocalidad FROM INDGDLSQL01.INDAR_INACTIONWMS.dbo.Localidad  where codigo  BETWEEN '" + ubicacion + "15' AND '" + ubicacion + "19' )";

                }

                
              

                Console.WriteLine(cmd.CommandText);
                 cmd.ExecuteNonQuery();
                myConnection.Close();
                myConnection.Dispose();
                cmd.Dispose();
                

            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.ToString());
            }
        
        
        
        }


        public void asignaMapaUbicaciones(string ubicacion,bool adelante)
        {
            try
            {
                SqlConnection myConnection = new SqlConnection(sqlString);
                myConnection.Open();
                SqlCommand cmd = new SqlCommand("", myConnection);

                if (adelante)
                {
                    cmd.CommandText = @" INSERT INTO INDGDLSQL01.INDAR_INACTIONWMS.dbo.UsuarioLocalidad (IdUsuario,IdLocalidad,IdUsuarioActualiza,FechaActualizado)
                              select " + searchLookUpEdit2.EditValue.ToString() + ",idlocalidad,1,GETDATE() from INDGDLSQL01.INDAR_INACTIONWMS.dbo.Localidad 		where codigo between '" + ubicacion + "10' AND '" + ubicacion + "14'";
                }
                else
                {

                    cmd.CommandText = @" INSERT INTO INDGDLSQL01.INDAR_INACTIONWMS.dbo.UsuarioLocalidad (IdUsuario,IdLocalidad,IdUsuarioActualiza,FechaActualizado)
                              select " + searchLookUpEdit2.EditValue.ToString() + ",idlocalidad,1,GETDATE() from INDGDLSQL01.INDAR_INACTIONWMS.dbo.Localidad 		where codigo between '" + ubicacion + "15' AND '" + ubicacion + "19'";
                }

                Console.WriteLine(cmd.CommandText);
               cmd.ExecuteNonQuery();
              

            }
            catch (SqlException ex)
            {
                MessageBox.Show(ex.ToString());
            }
        
        
        }



    }
}
